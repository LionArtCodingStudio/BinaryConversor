/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package binaryconversor;

import java.util.ArrayList;
import java.util.stream.Collectors;

/**
 *
 * @author leoga
 */
public class Conversor extends javax.swing.JFrame {

    /**
     * Creates new form Conversor
     */
    public Conversor() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOperacoes = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtNum = new javax.swing.JTextField();
        converter = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtNumbit = new javax.swing.JTextField();
        converterbit = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtNumHex = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        converterHex = new javax.swing.JButton();
        txtResultHex = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        resultArea = new javax.swing.JTextArea();
        BtnTotext = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        BtnTobinary = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conversor Bin√°rio");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtResultado.setEditable(false);
        txtResultado.setColumns(20);
        txtResultado.setRows(5);
        txtResultado.setAutoscrolls(false);
        jScrollPane2.setViewportView(txtResultado);

        txtOperacoes.setEditable(false);
        txtOperacoes.setColumns(20);
        txtOperacoes.setRows(5);
        jScrollPane1.setViewportView(txtOperacoes);

        jLabel2.setText("Result");

        jLabel1.setText("Decimal");

        converter.setText("To binary");
        converter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterActionPerformed(evt);
            }
        });

        jLabel5.setText("Binary");

        converterbit.setText("To decimal");
        converterbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterbitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNumbit, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(converterbit, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(converter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(jLabel2)))
                .addGap(60, 60, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(converter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(converterbit))
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        jTabbedPane1.addTab("dec<->binary", jPanel1);

        jLabel4.setText("Number");

        converterHex.setText("convert");
        converterHex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                converterHexActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtNumHex, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                        .addComponent(converterHex, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtResultHex))
                .addGap(59, 59, 59))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumHex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(converterHex))
                .addGap(18, 18, 18)
                .addComponent(txtResultHex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(180, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("dec->hex", jPanel2);

        TextArea.setColumns(20);
        TextArea.setRows(5);
        jScrollPane4.setViewportView(TextArea);

        resultArea.setColumns(20);
        resultArea.setRows(5);
        jScrollPane5.setViewportView(resultArea);

        BtnTotext.setText("To text");
        BtnTotext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTotextActionPerformed(evt);
            }
        });

        jLabel6.setText("Text or Binary");

        jLabel7.setText("Result");

        BtnTobinary.setText("To binary");
        BtnTobinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTobinaryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnTobinary)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(BtnTotext))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnTotext)
                    .addComponent(jLabel6)
                    .addComponent(BtnTobinary))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Ascii -> binary", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("decimal->Binary");
        jTabbedPane1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>                        
// so fiz este__________________________________________________________________
    private void converterActionPerformed(java.awt.event.ActionEvent evt) {                                          
            String numStr = txtNum.getText();
            double Num = Double.parseDouble(numStr);
            //listas------------------------------------------------------------
            ArrayList<Double> divisores = new ArrayList<>();
            ArrayList<Integer> binario = new ArrayList<>();
            
            for(double i = 1; i <= Num;i++){
                if (Num%i==0){
                    divisores.add(i);
                } 
            }
            //converte para binario---------------------------------------------
            double tempNum = Num;
            while (tempNum > 0){
                int sobra = (int)(tempNum % 2);
                binario.add(sobra);
                tempNum /=2;
            }
            //inverte os numeros para formar um binario-------------------------
            StringBuilder revBinarioStr = new StringBuilder();
            for (int i = binario.size() -1; i >= 0; i--){
                revBinarioStr.append(binario.get(i));
            }  
            //Lembrete
            //Exemplo numero 1812
            // - 1 e usado pois .size conta o tamanho do array a partir de 1
            // ele subtrai o valor a partir do index 11 at√© o 1 
            // mas o array come√ßa a partir do index 0 e vai ate 10
            // no caso do numero 1812 a var binario retorna 00101000111 (x=nada)
            //  bits nao invertidos        = 0  0  1  0  1  0  0  0  1  1  1  x
            //                               ^  ^  ^  ^  ^  ^  ^  ^  ^  ^  ^  ^
            //index(local) no array        = 0  1  2  3  4  5  6  7  8  9  10 x
            //binario.size retorna         = x  1  2  3  4  5  6  7  8  9  10 11
            //                                  ^  ^  ^  ^  ^  ^  ^  ^  ^  ^
            //     sem subtrair ele para aqui-> 1  1  1  0  0  0  1  0  1  0  
            //         e como n√£o existe index 11 no array ele come√ßa aqui ^
            //se voce subitrai cada valor do binari.size por -1 ele fica assim
            //index(local) no array        = 0  1  2  3  4  5  6  7  8  9  10 
            //binario.size-1 retorna       = 0  1  2  3  4  5  6  7  8  9  10 
            //                               ^  ^  ^  ^  ^  ^  ^  ^  ^  ^  ^
            //bits nao invertidos          = 0  0  1  0  1  0  0  0  1  1  1
            //------------------------------------------------------------------
            //converte o array para string--------------------------------------
            String divisoresStr = String.join("-> ", 
                divisores.stream()
                        .map(Object::toString)
                            .toArray(String[]::new));
            
            String binarioStr = revBinarioStr.toString();
            if (binarioStr.contains("1")) {
                binarioStr = binarioStr.replaceFirst("^0+(?!$)", "");
            }
            
            
            
            //chama o BinarioStr e divisoresStr em suas respectivas textAreas
            //ou o output de sua escolha casa esteja usando fora do netbeans
            txtOperacoes.setText(divisoresStr);
            txtResultado.setText(binarioStr);
    }                                         

    private void converterHexActionPerformed(java.awt.event.ActionEvent evt) {                                             
        //conver√ß√£o para HEXADECIMAL Ainda vai ser implementado
        String hexTable = "0123456789abcdef";
        String NumH = txtNumHex.getText();
    }                                            

    private void converterbitActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // input de sua escolha
        String binarioStr = txtNumbit.getText(); 
        // binario inteiro
        // int binario = Integer.parseInt(binarioStr);
        ArrayList<Integer> bits = new ArrayList<>();
        ArrayList<Integer> bitsInv = new ArrayList<>();
        ArrayList<Integer> tabela = new ArrayList<>();
        ArrayList<Integer> NumR = new ArrayList<>();
        for(int i=0;i < binarioStr.length(); i++){
            char digito = binarioStr.charAt(i);
            if (digito == '0'){
                bits.add(0);
            }else if(digito == '1'){
                bits.add(1);
            }else{
                txtOperacoes.setText("ERRO numero invalido digite somente 0 ou 1");
            }
        }
        for (int i=bits.size()-1;i >= 0; i--){
                int x = bits.get(i);
                bitsInv.add(x);
            }
        //define o tamanho da tabela decimal exemplo 1 4 8 16 32.....
        int NumAtual = 0;
        for(int i=0; i < bits.size();i++){
             if(NumAtual == 0){
                    NumAtual++;
                    tabela.add(NumAtual);
            }else if(NumAtual != 0){
                    NumAtual *=2;
                    tabela.add(NumAtual);
            }
        }               
        //compara a tabela com o binario
        int x = 0;
        for(int i=0; i< tabela.size();i++){
            if (bitsInv.get(i)%2 != 0){
                x = tabela.get(i);
                NumR.add(x);
            }else{NumR.add(0);}
        }
        //soma 
        int resultado = 0;
        for(int i=0;i<NumR.size(); i++){
            resultado += NumR.get(i);
        }
         // output de sua escolha
        txtOperacoes.setText("bits: "+bits
                +"\n:bits em orden "+bitsInv+"\ntabela: "+tabela);
        txtResultado.setText("\nnumeros filtrados: "
                +NumR+"\nresultado: "+resultado);        
//binario                 1 1 1 0 0  0  1  0   1   0   0 = 1812
//inverte o binario       0 0 1 0 1  0  0  0   1   1   1
//cria um array com o binario
//pega o tamanho          1 2 3 4 5  6  7  8   9   10  11<-nao existe index 11
//todos os numeros-1      0 1 2 3 4  5  6  7   8   9   10<-come√ßa do index certo
//binario                 0 0 1 0 1  0  0  0   1   1   1
//                        ^ ^ ^ ^ ^  ^  ^  ^   ^   ^   ^
//compara e               1,2,4,8,16,32,64,128,256,512,1024 multiplica 
//multiplica os pares         ^   ^            ^   ^   ^
//soma oque retornar par      4 + 16         + 256+512+1024 = 1812<-resultado
//Fim___________________________________________________________________________
    }                                            

    private void BtnTotextActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void BtnTobinaryActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        resultArea.setText("");
        String input =TextArea.getText();
        
        
        for (int i=0;i<=input.length()-1;i++){
            
            char tempChar = input.charAt(i);
            int chValue = (int)tempChar;
            System.out.print(chValue+" ");
                    
            String binaryStr = Integer.toBinaryString(chValue);
            int Repeats = 8-binaryStr.length();
            
            if (Repeats<0){
                Repeats = 0;              
            }
            String padding = "0".repeat(Repeats);
            resultArea.append(padding+binaryStr);
        }
        
        
        
        
    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Conversor().setVisible(true);
            }
        });
    }
//Fim___________________________________________________________________________
    // Variables declaration - do not modify                     
    private javax.swing.JButton BtnTobinary;
    private javax.swing.JButton BtnTotext;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JButton converter;
    private javax.swing.JButton converterHex;
    private javax.swing.JButton converterbit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea resultArea;
    private javax.swing.JTextField txtNum;
    private javax.swing.JTextField txtNumHex;
    private javax.swing.JTextField txtNumbit;
    private javax.swing.JTextArea txtOperacoes;
    private javax.swing.JTextField txtResultHex;
    private javax.swing.JTextArea txtResultado;
    // End of variables declaration                   


}
